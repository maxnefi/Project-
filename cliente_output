#include <arpa/inet.h>
#include <errno.h>
#include <fcntl.h>
#include <signal.h>
#include <sys/stat.h>
#include <sys/uio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <sys/un.h>
#include <string.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <netdb.h>
#include <stdio.h>
#include <stdlib.h>

#define SA struct sockaddr
#define MAX 4096
void str_cli(int meusocket)
{
	char	msgenviada[MAX], msgreceb[MAX], user[MAX], subs[MAX]; // onde as mensagens serão armazenadas
	int p, t, x;
	//FILE *pFile;
	//printf("Qual seu nome de usuario: ");
	//gets(user);
	//t= strlen(user);
	//user[t]= ':';
	while(strcmp(msgenviada, "xau") != 0 && strcmp(msgreceb, "xau") != 0)
	{
		printf("Digite algo: ");
		fgets(msgenviada, MAX,stdin);
		//salva a mensagem enviada no arquivo de texto log, caso esse arquivo não exista, ele será criado 
		//o "a" é de append, ou seja, acrescenta a mensagem no arquivo e não sobrescreve.
		printf("Mensagem enviada: %s\n", msgenviada);
		write(meusocket, msgenviada, strlen(msgenviada));
		printf("aguardando mensagem ...\n");
		read(meusocket, msgreceb, 4096);
		printf(" Mensagem recebida: %s\n", msgreceb);
		
	}
}
int main()
{
	int meusocket;		
	struct sockaddr_in servaddr;
	
	meusocket = socket(AF_INET, SOCK_STREAM, 0); // abre o socket
	//tratando a estrutura
	bzero(&servaddr, sizeof(servaddr));
	servaddr.sin_family = AF_INET; // familia do socket
	servaddr.sin_port = htons(9502); // porta do socket
	connect(meusocket, (SA *) &servaddr, sizeof(servaddr)); //conetcando cliente em determidado socket,
															// usando o valore de retorno do socket, a suct do socket e o tamanho 
															// da struct severaddr 
	str_cli(meusocket); //entra na função que envia e recebe mensagens

	exit(0);
}
